import org.jetbrains.grammarkit.tasks.*

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.18'
    id 'org.jetbrains.grammarkit' version '2020.1.2'
}

allprojects {
    sourceCompatibility = 1.8
    apply plugin: 'org.jetbrains.intellij'

    // See https://github.com/JetBrains/gradle-intellij-plugin/
    intellij {
        version '2020.1'
        downloadSources true
        pluginName 'PureBasic'
    }

    dependencies {
        testCompile group: "junit", name: "junit", version: "4.12"
    }

    repositories {
        mavenCentral()
    }
}

apply plugin: "org.jetbrains.grammarkit"

group "eu.bradan.purebasic"
version "1.0-SNAPSHOT"

dependencies {
    compile project('jps-plugin')
}
intellij {
}
patchPluginXml {
    changeNotes '''
      Add change notes here.<br>
      <em>most HTML tags may be used</em>'''
}
runIde {
    jvmArgs += ['-Dcompiler.process.debug.port=5005']
}
sourceSets {
    main {
        java.srcDirs += "src/main/gen"
    }
}

task createFatJar(type: Jar) {
    baseName = 'IntelliJ-PureBasic'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task generatePureBasicLexer(type: GenerateLexer) {
    source = "src/main/java/eu/bradan/purebasic/PureBasic.flex"
    targetDir = "src/main/gen/eu/bradan/purebasic"
    targetClass = "PureBasicLexer"
    purgeOldFiles = true
}
task generatePureBasicParserPre(type: GenerateParser) {
    dependsOn generatePureBasicLexer
    mustRunAfter generatePureBasicLexer

    source = "src/main/java/eu/bradan/purebasic/PureBasic.bnf"
    targetRoot = "src/main/gen"
    pathToParser = 'eu/bradan/purebasic/PureBasicParser.java'
    pathToPsiRoot = 'eu/bradan/purebasic/psi'
    purgeOldFiles = true
}
task generatePureBasicParser(type: GenerateParser) {
    dependsOn generatePureBasicParserPre
    dependsOn compileJava

    compileJava.mustRunAfter generatePureBasicParserPre

    outputs.upToDateWhen { false } // always execute
    doFirst {
        classpath += sourceSets.main.runtimeClasspath // load the classes
    }

    // identical to generatePureBasicParserPre
    source = "src/main/java/eu/bradan/purebasic/PureBasic.bnf"
    targetRoot = "src/main/gen"
    pathToParser = 'eu/bradan/purebasic/PureBasicParser.java'
    pathToPsiRoot = 'eu/bradan/purebasic/psi'
    purgeOldFiles = true
}

// TODO: Wait for a fix for issue https://github.com/JetBrains/gradle-grammar-kit-plugin/issues/3
//       Cannot automatically generate lexer/parser without invoking the java compiler twice
//       Invoking gradle tasks multiple times is not supported, so invoke it manually!
//compileJava.dependsOn(generatePureBasicLexer)
//compileJava.dependsOn(generatePureBasicParser)
