plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.4'
    id 'org.jetbrains.grammarkit' version '2020.3.2'
}

apply plugin: 'org.jetbrains.grammarkit'

import org.jetbrains.intellij.tasks.*
import org.jetbrains.grammarkit.tasks.*

grammarKit {
    jflexRelease = '1.7.0-1'
    grammarKitRelease = 'e7687f2b32'
}

allprojects {
    sourceCompatibility = 1.8
    apply plugin: 'org.jetbrains.intellij'

    // See https://github.com/JetBrains/gradle-intellij-plugin/
    intellij {
        version '2020.2'
        downloadSources true
        pluginName 'PureBasic'
    }

    dependencies {
        testCompile group: "junit", name: "junit", version: "4.12"
    }

    repositories {
        mavenCentral()
    }
}

apply plugin: "org.jetbrains.grammarkit"

group "eu.bradan.purebasic"
version "0.11-SNAPSHOT"

dependencies {
}
intellij {
}
patchPluginXml {
    changeNotes '''
      First version uploaded into the plugin repository.<br>
      What should work by now:<br>
      1. Syntax Highlighting<br>
      2. Compiling with PureBasic and SpiderBasic<br>
      3. Running native applications<br>
      '''
}
runIde {
    jvmArgs += ['-Dcompiler.process.debug.port=5005', '--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED']
    //ideDirectory = '/home/daniel/.local/share/JetBrains/Toolbox/apps/PhpStorm/ch-0/202.7660.42'
}
publishPlugin {
    token = System.getenv("eu_bradan_purebasic_intellijPublishToken")
    channels 'alpha'
}
sourceSets {
    main {
        java.srcDirs += "src/main/gen"
    }
}

task generatePureBasicLexer(type: GenerateLexer) {
    source = "src/main/java/eu/bradan/purebasic/PureBasic.flex"
    targetDir = "src/main/gen/eu/bradan/purebasic"
    targetClass = "PureBasicLexer"
    purgeOldFiles = true
}
task generatePureBasicParserPre(type: GenerateParser) {
    dependsOn generatePureBasicLexer

    outputs.upToDateWhen { false } // always execute
    doFirst {
        classpath += sourceSets.main.runtimeClasspath // load the classes
    }

    source = "src/main/java/eu/bradan/purebasic/PureBasic.bnf"
    targetRoot = "src/main/gen"
    pathToParser = 'eu/bradan/purebasic/PureBasicParser.java'
    pathToPsiRoot = 'eu/bradan/purebasic/psi'
    purgeOldFiles = true
}
task generatePureBasicParser(type: GenerateParser) {
    dependsOn generatePureBasicParserPre
    dependsOn compileJava

    compileJava.mustRunAfter generatePureBasicParserPre

    outputs.upToDateWhen { false } // always execute
    doFirst {
        classpath += sourceSets.main.runtimeClasspath // load the classes
    }

    // identical to generatePureBasicParserPre
    source = "src/main/java/eu/bradan/purebasic/PureBasic.bnf"
    targetRoot = "src/main/gen"
    pathToParser = 'eu/bradan/purebasic/PureBasicParser.java'
    pathToPsiRoot = 'eu/bradan/purebasic/psi'
    purgeOldFiles = false
}

// TODO: Wait for a fix for issue https://github.com/JetBrains/gradle-grammar-kit-plugin/issues/3
//       Cannot automatically generate lexer/parser without invoking the java compiler twice
//       Invoking gradle tasks multiple times is not supported, so invoke it manually!
//compileJava.dependsOn(generatePureBasicLexer)
//compileJava.dependsOn(generatePureBasicParser)

task runFlexDebug(type: RunIdeTask) {
    dependsOn compileJava
    dependsOn buildPlugin

    classpath += sourceSets.main.runtimeClasspath
    classpath += project.files()

//    doFirst {
//        classpath += sourceSets.main.runtimeClasspath
//        classpath.each { println it }
//        // The classpath does not contain the GrammarKit libraries,
//        // so it doesn't find com/intellij/lexer/FlexLexer
//    }

    group = "verification"
    description = "Run JFlex %debug"

    main = 'eu.bradan.purebasic.PureBasicLexer'
    args = ["src/test/testData/ParsingTestData.pb"]
}
